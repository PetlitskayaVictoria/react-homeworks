{"version":3,"sources":["p2-homeworks/h5/Navbar.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/Navbar.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","props","onClickItem","setCollapsed","className","isCollapsed","classes","hidden","menuContainer","onClick","to","menuItem","activeClassName","highlight","Header","useState","navbarContainer","menuIcon","src","alt","Message","cl","messageContainer","contain","avatar","textContainer","userName","name","userMessage","message","messageTime","time","messageData","HW1","Affair","itemContainer","task","affair","priority","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","tableStyle","buttonsStyle","buttonStyle","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","af","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","someClass","container","inputErrorContainer","value","onChange","errorMessage","usersNumber","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","checked2","setChecked2","column","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","editableSpanContainer","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","storedValue","PreJunior","Error404","mainImage","errorText","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7ab9c188.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"Navbar_hidden__1yDlk\",\"menuContainer\":\"Navbar_menuContainer__3_C3Q\",\"highlight\":\"Navbar_highlight__31Esg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Message_messageContainer__3MCJP\",\"contain\":\"Message_contain__2YF2a\",\"textContainer\":\"Message_textContainer__294K-\",\"userName\":\"Message_userName__3FYDl\",\"userMessage\":\"Message_userMessage__1I5Tp\",\"messageTime\":\"Message_messageTime__3SP_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableStyle\":\"Affairs_tableStyle__rwb3D\",\"buttonsStyle\":\"Affairs_buttonsStyle__21NeC\",\"buttonStyle\":\"Affairs_buttonStyle__35Z9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__11QLz\",\"inputErrorContainer\":\"Greeting_inputErrorContainer__2fvmv\",\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\",\"errorMessage\":\"Greeting_errorMessage__zEoF5\",\"usersNumber\":\"Greeting_usersNumber__1cTwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1P_Mf\",\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"Header_navbarContainer__2AC6B\",\"menuIcon\":\"Header_menuIcon__TP2Yh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"Affair_itemContainer__8DUpj\",\"task\":\"Affair_task__3MHEV\",\"priority\":\"Affair_priority__1jVve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonStyle\":\"SuperButton_buttonStyle__2a2ET\",\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Error404_messageContainer__3Vx1w\",\"mainImage\":\"Error404_mainImage__AJvNf\",\"errorText\":\"Error404_errorText__2pAbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpanContainer\":\"SuperEditableSpan_editableSpanContainer__KTYzo\",\"editableSpan\":\"SuperEditableSpan_editableSpan__S8A7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\"};","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport classes from './Navbar.module.css'\n\n\ntype NavbarType = {\n    isCollapsed: boolean\n    setCollapsed: (isCollapsed: boolean) => void\n}\n\nfunction Navbar(props: NavbarType) {\n\n    const onClickItem = () => {\n        props.setCollapsed(true)\n    }\n\n    return (\n        <div className={props.isCollapsed ? classes.hidden : classes.menuContainer}>\n            <ul>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to=\"/pre-junior\"\n                             className={classes.menuItem}\n                    activeClassName={classes.highlight}>PreJunior</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to=\"/junior\"\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Junior</NavLink>\n                </li>\n                <li>\n                    <NavLink onClick={onClickItem}\n                             to=\"/junior-plus\"\n                             className={classes.menuItem}\n                             activeClassName={classes.highlight}>Junior Plus</NavLink>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React, {useState} from \"react\";\nimport classes from './Header.module.css'\nimport Navbar from \"./Navbar\";\n\nfunction Header() {\n\n    const [isCollapsed, setCollapsed] = useState<boolean>(true)\n    const toggleMenu = () => {\n        setCollapsed(!isCollapsed)\n    }\n    return (\n        <div className={classes.menuContainer}>\n            <div className={classes.navbarContainer}>\n                <img onClick={toggleMenu}\n                     className={classes.menuIcon}\n                     src=\"https://upload.wikimedia.org/wikipedia/commons/b/b2/Hamburger_icon.svg\"\n                     alt=\"menu\"/>\n            </div>\n            <Navbar isCollapsed={isCollapsed} setCollapsed={setCollapsed}/>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport cl from \"./Message.module.css\";\nimport {MessageDataType} from \"./HW1\";\n\n\nfunction Message(props: MessageDataType) {\n\n    return (\n        <div className={cl.messageContainer}>\n            <div className={cl.contain}>\n                <img src={props.avatar}/>\n                <div className={cl.textContainer}>\n                    <div className={cl.userName}>\n                        {props.name}\n                    </div>\n                    <div className={cl.userMessage}>\n                        {props.message}\n                    </div>\n                    <span className={cl.messageTime}>\n                    {props.time}\n                </span>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nexport type MessageDataType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nconst messageData = {\n    avatar: \"https://cdn4.iconfinder.com/data/icons/avatars-xmas-giveaway/128/girl_avatar_child_kid-512.png\",\n    name: \"Victoria\",\n    message: \"Hey you, can you help me please?\",\n    time: \"18:30\",\n};\n\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            {/*homeworks 1*/}\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*/!*для личного творчества, могу проверить*!/*/}\n            {/*/!*<AlternativeMessage/>*!/*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport cl from './Affair.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };// need to fix\n\n    return (\n        <div className={cl.itemContainer}>\n            <div className={cl.task}>\n                Task: {props.affair.name}\n            </div>\n            <div className={cl.priority}>\n                Priority: {props.affair.priority}\n            </div>\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport cl from \"./Affairs.module.css\"\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\");\n    }; // need to fix\n\n    const setHigh = () => {\n        props.setFilter(\"high\");\n    };\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    };\n    const setLow = () => {\n        props.setFilter(\"low\")\n    };\n\n    return (\n        <div className={cl.tableStyle}>\n\n            {mappedAffairs}\n            <div className={cl.buttonsStyle}>\n                <button className={cl.buttonStyle} onClick={setAll}>All</button>\n                <button className={cl.buttonStyle} onClick={setHigh}>High</button>\n                <button className={cl.buttonStyle} onClick={setMiddle}>Middle</button>\n                <button className={cl.buttonStyle} onClick={setLow}>Low</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"; // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    else {\n        return affairs.filter(af => af.priority === filter);\n    }\n     // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(af => af._id !== _id); // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : s.someClass // need to fix with (?:)\n\n    return (\n        <div className={s.container}>\n            <div className={s.inputErrorContainer}>\n                <input value={name} onChange={setNameCallback} className={inputClass}/>\n                <span className={s.errorMessage}>{error}</span>\n            </div>\n            <button onClick={addUser}>Add</button>\n            <span className={s.usersNumber}>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setError(\"\");\n        setName(e.currentTarget.value); // need to fix\n    };\n\n    const addUser = () => {\n        if (name) {\n            addUserCallback(name);\n            alert(`Hello ${name} !`);\n            setName(\"\");\n        } else {\n            setError(\"Please, enter your name first\")\n        }\n\n        // need to fix\n    };\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string// need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        setUsers([...users, {_id : v1(), name : name}]); // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            Homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput  }`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.buttonStyle} ${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked2: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        debugger\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const [checked2, setChecked2] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked2(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением  не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked2} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport classes from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n\n    const spanClassName = `${\"сделать красивый стиль для спана\"}  ${classes.editableSpan}`;\n\n    return (\n        <div className={classes.editableSpanContainer}>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                        <img src=\"https://www.svgrepo.com/show/42233/pencil-edit-button.svg\" alt=\"pencil\"/>\n                    </span>\n                )\n            }\n        </div>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        let storedValue = restoreState(\"editable-span-value\", value)\n        setValue(storedValue);\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз\n","import React from \"react\";\nimport classes from './Error404.module.css'\n\nfunction Error404() {\n    return (\n        <div>\n            <div className={classes.messageContainer}>\n                <img className={classes.mainImage} src=\"https://svgsilh.com/svg/1298794.svg\" alt=\"cat\"/>\n                <div className={classes.errorText}>\n                    <h1>Ooooops...</h1>\n                    <h2>404</h2>\n                    <h3>Page not found :(</h3>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\n\nfunction Junior() {\n    return (\n        <div>\n            I am Junior Page :)\n        </div>\n    );\n}\n\nexport default Junior;\n\n","import React from \"react\";\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            I am Junior + Page :)\n        </div>\n    );\n}\n\nexport default JuniorPlus;\n\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\"\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1 />*/}\n            {/*<HW2 />*/}\n            {/*<HW3 />*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}